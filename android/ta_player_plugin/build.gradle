apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../constants.gradle'

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        versionName project.ext.releaseVersion
        versionCode project.ext.releaseVersionCode
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.bitmovin.player:playercore:2.37.0'
    implementation 'com.applicaster:PlayerEvents:0.0.+'

    implementation "com.google.android.gms:play-services-cast-framework:$playServicesCastVersion" //only needed if Chromecast is used
//    implementation "com.android.support:mediarouter-v7:$androidSupportVersion"  //only needed if Chromecast is used
//    implementation "com.android.support:support-v4:$androidSupportVersion"  //only needed if Chromecast is used
//    implementation "com.android.support:support-compat:$androidSupportVersion"

    testImplementation 'junit:junit:4.12'

    // Applicaster SDK
    def applicasterSDKPath = 'com.applicaster:applicaster-android-sdk:2.32.15'

    // Check if an open SDK is defined - if not use the closed one.
    //Check if an open SDK is defined - if not use the closed one.
    def devSDK = findProject(':applicaster-android-sdk')
    if (devSDK != null) {
        api project(':applicaster-android-sdk') {
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-core'
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-dash'
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-hls'
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-ui'
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-smoothstreaming'
        }
    } else {
        api(applicasterSDKPath) {
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-core'
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-dash'
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-hls'
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-ui'
            exclude group: 'com.google.android.exoplayer', module: 'exoplayer-smoothstreaming'
        }
    }
}

apply from: '../publish.gradle'
